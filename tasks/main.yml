---

# ver: https://github.com/nickjj/ansible-xampp
#      https://docs.debops.org/en/master/index.html

#wget https://www.apachefriends.org/xampp-files/7.2.11/xampp-linux-x64-7.2.11-0-installer.run
  - name: obteniendo instalador XAMPP
    get_url:
      url: https://www.apachefriends.org/xampp-files/7.2.11/xampp-linux-x64-7.2.11-0-installer.run
      dest: /tmp/
      mode: 0775
      checksum: md5:9bbb1892a2f81891ab4663734cc01189

  - name: Instalar nrpe
    become: yes
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - nrpe 
      - nagios-plugins-nrpe


    
#---------- Roll para instalar y configurar nrpe ----------------------#
#   - name: Instalar nrpe
#     become: yes
#     package:
#       name: "{{ item }}"
#       state: present
#     with_items:
#       - nrpe 
#       - nagios-plugins-nrpe
    
#   - name: "Change port default"
#     become: yes
#     replace:      
#       path: /etc/nagios/nrpe.cfg
#       regexp: '(server_port=)([0-9][0-9][0-9][0-9])'
#       replace: '\g<1> 3268'

#   - name: "Habilitar acceso del servidor de nagios al equipo para consultar chequeos"
#     become: yes
#     replace:      
#       path: /etc/nagios/nrpe.cfg
#       regexp: '(allowed_hosts=)(.*)'
#       replace: '\g<1> 127.0.0.1,{{ SERVER_NAGIOS }} '

#   - name: Upload de los archivos de chekeos
#     copy:
#       src: "{{ item }}"
#       dest: "/usr/lib64/nagios/plugins/"
#       owner: nagios
#       group: nagios
#       mode: 0775
#     become: yes
#     with_fileglob:
#       - files/*

#   - name: "Create symbolic link"
#     file:
#       src: '/usr/lib64/nagios/plugins/check_tcp'
#       dest: '/usr/lib64/nagios/plugins/{{ item }}'
#       state: link
#       owner: nagios
#       group: nagios
#       mode: 0775
#     become: yes
#     with_items:
#       - check_clamd
#       - check_ftp
#       - check_imap
#       - check_jabber
#       - check_nntp
#       - check_nntps
#       - check_pop
#       - check_simap
#       - check_spop
#       - check_ssmtp
#       - check_udp

# #-------------------------------------------------------
# #cuadno se destarea el tgz los chequeos quedan en este path.. y ahi funciona bien nagios..
# #cuando se instala desde el rpm lo deja en /usr/lib64 y desde damocles no logra hacer el chequeo.

#   - name: Creates directory (para mantener compatibilidad con tgz)
#     file:
#       path: /usr/local/nagios/
#       state: directory
#       owner: nagios
#       group: nagios
#       mode: 0775
#     become: yes

#   - name: "Create symbolic link  (para mantener compatibilidad con tgz)"
#     file:      
#       src: '/usr/lib64/nagios/plugins'
#       dest: '/usr/local/nagios/libexec'
#       state: link
#       owner: nagios
#       group: nagios
#       mode: 0775
#     become: yes

#   - name: "Elimino chequeos pre-existentes"
#     become: yes
#     lineinfile:
#       regexp: '(^command\[check)(.*)'
#       state: absent
#       path: /etc/nagios/nrpe.cfg

#   - name: Set architecture for audit gshadow tasks
#     set_fact:
#       path_chequeos: "/usr/local/nagios/libexec"
 
# #--------------------------------------------------------

#   - name: "Agregado chequeos en configuracion de nrpe"
#     become: yes
#     blockinfile:
#       create: yes
#       state: present
#       path: /etc/nagios/nrpe.cfg
#       block: |
#         #-----------------------------------------------------------------#
#         #---- Chequeos habilitados para Nagios: dgsiaf                ----#
#         #-----------------------------------------------------------------#

#         command[check_users]={{ path_chequeos }}/check_users -w 5 -c 10
#         command[check_load]={{ path_chequeos }}/check_load -w 15,10,5 -c 30,25,20
#         command[check_disk]={{ path_chequeos }}/check_disk -w 10% -c 5% -C -w 3000M -c 1500M -p / -e
#         command[check_zombie_procs]={{ path_chequeos }}/check_procs -w 5 -c 10 -s Z
#         command[check_swap]={{ path_chequeos }}/check_swap -w 65 -c 40 -a
#         command[check_total_procs]={{ path_chequeos }}/check_procs -w 800 -c 1000 
#         command[check_ntp_chrony]={{ path_chequeos }}/check_chrony.sh 1 3
#     tags:      
#       - Carga_Reglas_chequeos

#   - name: Restart service nrpe
#     become: yes
#     systemd:
#       enabled: yes
#       state: restarted
#       name: nrpe  

#   # - name: Check status port 3268
#   #   command: ss -nap| grep 3268

#   - name: Verificar si firewalld Habilitado
#     become: yes
#     #shell: service firewalld status
#     #shell: service firewalld status  |grep 'Active:' |awk '{print $2}'
#     shell:  service firewalld status  |grep Loaded |awk '{print $4}' |awk -F ';' '{print $1}'
#     register: firewalld_Enable
#     ignore_errors: yes
#     args:
#       warn: false

#   - name: Verificar si firewalld esta ejecutando
#     become: yes
#     #shell: service firewalld status
#     shell: service firewalld status  |grep 'Active:' |awk '{print $2}'
#     #shell:  service firewalld status  |grep Loaded |awk '{print $4}' |awk -F ';' '{print $1}'
#     register: firewalld_Running
#     ignore_errors: yes
#     args:
#       warn: false

#   # - debug:
#   #     msg: "Estado Servicio: {{firewalld_Enable.stdout}}"
#   # - debug:
#   #     msg: "Estado Servicio: {{firewalld_Running.stdout}}"

#   - name: Habilitar tr√°fico de red para el cliente de nrpe
#     firewalld:
#       port: "{{ item }}/tcp"
#       permanent: true
#       state: "enabled"
#       #immediate: true
#     with_items:
#       - 3268
#     become: yes
#     when: "(firewalld_Enable.stdout != '') or (firewalld_Running.stdout != '' )"  
#     tags:
#       - activo_o_habilitado

#   - name: Habilito y ejecuto servicio firewalld
#     become: yes
#     systemd:      
#       name: firewalld
#       state: reloaded
#       enabled: yes
#     when: 
#       - "(firewalld_Enable.stdout == 'enabled') or (firewalld_Running.stdout == 'active' )"  
#       - "(firewalld_Enable.stdout != '') or (firewalld_Running.stdout != '' )"  
